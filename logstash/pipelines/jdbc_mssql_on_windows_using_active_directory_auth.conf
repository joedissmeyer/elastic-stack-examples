# MS SQL Query example using the Microsoft JDBC Driver for SQL Server when running Logstash on a Windows server.
# 
# This example is for the following conditions:
# - Logstash is running on a Windows server.
# - Logstash is running the JDBC input against a Microsoft SQL Server instance.
# - The user account IS an active directory domain account (a.k.a. domain service account).
# - The AD user has the proper permissions to run the query provided.
# - Finally, that Logstash is also running using the same user account defined in the JDBC input.
#
# You may notice this is pretty much the same as the local SQL auth example, but with one exception in the connection string. 
# "integratedSecurity=true" is the key here.
#
# Another limitation of using Active Directory accounts for JDBC is that Logstash MUST be running 
# on the Windows server using the same active directory account defined in the JDBC input. This is a limitation with Microsoft's JDBC driver
# on Windows. The MSSQL JDBC driver in Linux doesn't allow the use of Active Directory accounts.
#
# You can download the JDBC driver from Microsoft for free: https://docs.microsoft.com/en-us/sql/connect/jdbc/download-microsoft-jdbc-driver-for-sql-server?view=sql-server-2017
# The JAR in this example is version 4.2 of the JDBC driver.
# Download the latest version when in doubt of which version to use.

input {
  jdbc {
    jdbc_driver_library => "C:\elastic\logstash\driver\sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://mssql-name-or-ip:1433;databasename=my-database-name;integratedSecurity=true"
    jdbc_user => "domain\active_directory_user"
    jdbc_password => "ad_user_password"

    # Run this specific SQL query every five minutes. Reference https://crontab.guru/ for other schedule expressions.
    schedule => "*/5 * * * *"

    # SQL Query Statement
    statement => "Use [my-database-name]
SELECT
  [column1],
  [column2],
  [column3],
  [DateTime]
FROM
  [my-database-name].[dbo].[table1]
WHERE
  [DateTime] > DATEADD(MINUTE,-5,getdate())"
  }
}

filter {}

output {
  elasticsearch {
    hosts => ["es_data_node1:9200","es_data_node2:9200","es_data_node3:9200","es_data_node4:9200"]
    manage_template => false
    template_name => "my_index_template"
    index => "my_index_name-%{+YYYY.MM}"
    user => "logstash_user"
    password => "logstash_passsword"
  }
}